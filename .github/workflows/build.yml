name: GitHub CI

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master

env:
  REPO_NAME: ${{ github.repository }}
  EVENT_NAME: ${{ github.event_name }}

jobs:
  test-aarch64:
    name: "Wheel ${{ matrix.pyver }} aarch64"
    strategy:
      matrix:
        pyver: [cp36-cp36m, cp37-cp37m, cp38-cp38, cp39-cp39]
        arch: [aarch64]
      fail-fast: false
    runs-on: ubuntu-latest
    env:
      py: /opt/python/${{ matrix.pyver }}/bin/python
      img: quay.io/pypa/manylinux2014_${{ matrix.arch }}
    steps:
    - name: Checkout
      uses: actions/checkout@v2
    - name: Set up QEMU
      id: qemu
      uses: docker/setup-qemu-action@v1
    - name: Install dependencies
      run: |
            docker run --rm -v ${{ github.workspace }}:/ws:rw --workdir=/ws \
            ${{ env.img }} \
            bash -exc '${{ env.py }} -m pip install virtualenv && ${{ env.py }} -m venv .env && \
            source .env/bin/activate && \
            yum install -y sudo && \
            sudo yum -y install wget && \
            #set -x -e && \
            #export BAZEL_OPTIMIZATION="--config=optimization --config=linux_ci --config=cache" && \
            #bash -x -e .github/workflows/build.bazel.sh && \
            #sudo cp .bazelrc build/tensorflow_io/ && \
            #mv bazel-bin/tensorflow_io/.bazelrc . && \
            sudo wget -o /usr/local/bin/bazel "https://github.com/bazelbuild/bazel/releases/download/3.7.2/bazel-3.7.2-linux-arm64" && \
            sudo chmod u+x /usr/local/bin/bazel && \
            find bazel && \
            pip install wheel && \
            python setup.py --project tensorflow-io --data bazel-bin -q bdist_wheel && \
            python setup.py --project tensorflow-io-gcs-filesystem --data bazel-bin -q bdist_wheel && \
            ls dist/* && \
            deactivate'
